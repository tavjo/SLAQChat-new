# docker-compose.yml
services:
  # db:
  #   image: postgres:latest
  #   container_name: mock_database
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./db_data:/var/lib/postgresql/data
  #     - ./init-db:/docker-entrypoint-initdb.d
  #   networks:
  #     - app_network

  backend:
    build:
      context: .
      dockerfile: dockerfile.backend
    container_name: backend_service
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./app:/project/app
      - ./backend:/project/backend
    environment:
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY}
      LANGCHAIN_TRACING_V2: ${LANGCHAIN_TRACING_V2}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LANGCHAIN_ENDPOINT: ${LANGCHAIN_ENDPOINT}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_NAME1: ${DB_NAME1}
      # Add any additional backend-specific environment variables here
    networks:
      - app_network
    # depends_on:
    #   - db

  frontend:
    build:
      context: .
      dockerfile: dockerfile.frontend
    container_name: frontend_service
    env_file:
      - .env
    ports:
      - "8501:8501"
    depends_on:
      - backend
    volumes:
      - ./src/chatbot:/app
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

