###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Dict, Generic, List, Optional, TypeVar, Union, Literal

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################

T = TypeVar('T')
class StreamState(BaseModel, Generic[T]):
    value: T
    state: Literal["Pending", "Incomplete", "Complete"]


class Agent(BaseModel):
    agent: Optional[str] = None
    role: Optional[str] = None
    toolbox: Dict[str, Optional["ToolMetadata"]]

class Column(BaseModel):
    name: Optional[str] = None
    type: Optional[str] = None
    nullable: Optional[bool] = None
    default: Optional[str] = None
    json_keys: List[Optional[str]]

class DataSummarizer(BaseModel):
    summary: Optional[str] = None
    messages: Optional["Payload"] = None
    justification: Optional[str] = None

class Metadata(BaseModel):
    AntibodyParent: Optional[str] = None
    BioSampleAccession: Optional[str] = None
    BiosafetyLevel: Optional[str] = None
    Catalog: Optional[str] = None
    CellCount: Optional[str] = None
    CellLine: Optional[str] = None
    CellLineage: Optional[str] = None
    Checksum_PrimaryData: Optional[str] = None
    Checksum_PrimaryType: Optional[str] = None
    CompensationFCSParent: Optional[str] = None
    Concentration: Optional[str] = None
    ConcentrationUnits: Optional[str] = None
    File_PrimaryData: Optional[str] = None
    Fixation: Optional[str] = None
    Fixative: Optional[str] = None
    FlowAmount: Optional[str] = None
    FlowAmountUnits: Optional[str] = None
    FMO: Optional[str] = None
    Genotype: Optional[str] = None
    Instrument: Optional[str] = None
    InstrumentUser: Optional[str] = None
    Link_PrimaryData: Optional[str] = None
    Media: Optional[str] = None
    Name: Optional[str] = None
    Notes: Optional[str] = None
    Parent: Optional[str] = None
    PassageNum: Optional[str] = None
    Path_PrimaryData: Optional[str] = None
    Phenotype: Optional[str] = None
    Protocol: Optional[str] = None
    Protocol_Stimulation: Optional[str] = None
    Protocol_Treatment: Optional[str] = None
    Publish_uri: Optional[str] = None
    QC: Optional[str] = None
    QC_notes: Optional[str] = None
    ReagenCatalogNum: Optional[str] = None
    Reagent: Optional[str] = None
    ReagentBrand: Optional[str] = None
    ReagentManufacturer: Optional[str] = None
    Reference: Optional[str] = None
    Repository: Optional[str] = None
    RepositoryID: Optional[str] = None
    Scientist: Optional[str] = None
    SEEKSubmissionDate: Optional[str] = None
    SampleCreationDate: Optional[str] = None
    Software: Optional[str] = None
    Source: Optional[str] = None
    SourceFacility: Optional[str] = None
    Species: Optional[str] = None
    Stain: Optional[str] = None
    StorageLocation: Optional[str] = None
    StorageSite: Optional[str] = None
    StorageTemperature: Optional[str] = None
    StorageTemperatureUnits: Optional[str] = None
    StorageType: Optional[str] = None
    Stimulation: Optional[str] = None
    Timepoint: Optional[str] = None
    TotalProtein: Optional[str] = None
    TotalProteinUnits: Optional[str] = None
    Treatment1: Optional[str] = None
    Treatment1Dose: Optional[str] = None
    Treatment1DoseUnits: Optional[str] = None
    Treatment1Reference: Optional[str] = None
    Treatment2: Optional[str] = None
    Treatment2Dose: Optional[str] = None
    Treatment2DoseUnits: Optional[str] = None
    Treatment2Reference: Optional[str] = None
    TreatmentDoseTime: Optional[str] = None
    TreatmentRoute: Optional[str] = None
    TreatmentTimeUnits: Optional[str] = None
    TreatmentType: Optional[str] = None
    Type: Optional[str] = None
    UID: Optional[str] = None
    ValidationMethod: Optional[str] = None
    ValidationQuality: Optional[str] = None
    Vendor: Optional[str] = None

class Navigator(BaseModel):
    agent: Optional["Agent"] = None
    next_tool: Optional[str] = None
    tool_args: List[Optional[str]]
    justification: Optional[str] = None

class Payload(BaseModel):
    system_message: Optional[str] = None
    user_query: Optional[str] = None
    aggregatedMessages: List[Optional[str]]
    resource: Optional["ResourceBox"] = None

class QueryParser(BaseModel):
    parsed_query: Optional[str] = None
    tasks: List[Optional[str]]
    justification: Optional[str] = None

class ResourceBox(BaseModel):
    sample_metadata: List["Metadata"]
    protocolUrl: Optional[str] = None
    sampleUrl: Optional[str] = None
    UIDs: List[Optional[str]]
    db_schema: Optional["Schema"] = None

class Responder(BaseModel):
    Next_worker: Optional["Agent"] = None
    justification: Optional[str] = None

class ResponseFormatter(BaseModel):
    formattedResponse: Optional[str] = None
    name: Optional[str] = None
    messages: Optional["Payload"] = None
    justification: Optional[str] = None

class Schema(BaseModel):
    tables: List["Table"]

class SchemaMapper(BaseModel):
    name: Optional[str] = None
    schema_map: Optional["Schema"] = None
    pseudo_query: Optional[str] = None
    justification: Optional[str] = None

class Supervisor(BaseModel):
    Next_worker: Optional["Agent"] = None
    justification: Optional[str] = None

class Table(BaseModel):
    name: Optional[str] = None
    columns: List["Column"]

class ToolMetadata(BaseModel):
    doc: Optional[str] = None
    signature: Optional[str] = None

class Validator(BaseModel):
    name: Optional[str] = None
    Valid: Optional[bool] = None
    Clarifying_Question: Optional[str] = None
    justification: Optional[str] = None
    response: Optional["Payload"] = None
