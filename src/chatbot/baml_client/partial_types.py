###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Dict, Generic, List, Optional, TypeVar, Union, Literal

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################

T = TypeVar('T')
class StreamState(BaseModel, Generic[T]):
    value: T
    state: Literal["Pending", "Incomplete", "Complete"]


class DataSummarizer(BaseModel):
    Next_worker: Optional[str] = None
    summary: Optional[str] = None
    user_query: Optional[str] = None

class Navigator(BaseModel):
    agent: Optional[str] = None
    user_query: Optional[str] = None
    next_tool: Optional[str] = None
    tool_arg: Optional[str] = None
    summedMessages: Optional[Union[List[Optional[str]], Optional[None]]] = None

class Responder(BaseModel):
    Next_worker: Optional[str] = None
    aggregatedMessages: Optional[str] = None
    user_query: Optional[str] = None

class ResponseFormatter(BaseModel):
    Next_worker: Optional[str] = None
    formattedResponse: Optional[str] = None
    name: Optional[str] = None

class Resume(BaseModel):
    name: Optional[str] = None
    email: Optional[str] = None
    experience: List[Optional[str]]
    skills: List[Optional[str]]

class Supervisor(BaseModel):
    Next_worker: Optional[str] = None
    aggregatedMessages: Optional[str] = None
    user_query: Optional[str] = None

class Validator(BaseModel):
    Valid: Optional[bool] = None
    Clarifying_Question: Optional[str] = None
    originalMessage: Optional[str] = None
    Next_worker: Optional[str] = None
    name: Optional[str] = None
