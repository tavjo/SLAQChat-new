###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Dict, Generic, List, Literal, Optional, TypeVar, Union, TypeAlias


T = TypeVar('T')
CheckName = TypeVar('CheckName', bound=str)

class Check(BaseModel):
    name: str
    expression: str
    status: str

class Checked(BaseModel, Generic[T,CheckName]):
    value: T
    checks: Dict[CheckName, Check]

def get_checks(checks: Dict[CheckName, Check]) -> List[Check]:
    return list(checks.values())

def all_succeeded(checks: Dict[CheckName, Check]) -> bool:
    return all(check.status == "succeeded" for check in get_checks(checks))



class Agent(BaseModel):
    agent: str
    role: str
    toolbox: Optional[Dict[str, "ToolMetadata"]] = None

class DataSummarizer(BaseModel):
    summary: str
    messages: "Payload"
    justification: str

class Metadata(BaseModel):
    UID: Optional[str] = None
    Name: Optional[str] = None
    ID: Optional[str] = None
    DateOfBirth: Optional[str] = None
    Sex: Optional[str] = None
    Species: Optional[str] = None
    Origin: Optional[str] = None
    Facility: Optional[str] = None
    Notes: Optional[str] = None
    Contact: Optional[str] = None
    Scientist: Optional[str] = None
    Publish_uri: Optional[str] = None
    CoScientist: Optional[str] = None
    Treatment1: Optional[str] = None
    Treatment1Type: Optional[str] = None
    Treatment1Route: Optional[str] = None
    Treatment1Date: Optional[str] = None
    Treatment1Dose: Optional[str] = None
    Treatment1DoseUnits: Optional[str] = None
    Treatment2: Optional[str] = None
    Treatment2Type: Optional[str] = None
    Treatment2Route: Optional[str] = None
    Treatment2Date: Optional[str] = None
    Treatment2Dose: Optional[str] = None
    Treatment2DoseUnits: Optional[str] = None
    NecropsyDate: Optional[str] = None
    Cohort: Optional[str] = None
    Supplier: Optional[str] = None
    Treatment3: Optional[str] = None
    Treatment3Type: Optional[str] = None
    Protocol: Optional[str] = None
    Study: Optional[str] = None
    Funder: Optional[str] = None
    TotalCFU: Optional[str] = None
    LungCFU: Optional[str] = None
    LymphNodeCFU: Optional[str] = None
    TotalPathologyScore: Optional[str] = None
    LungPathologyScore: Optional[str] = None
    LymphNodePathologyScore: Optional[str] = None
    CFUUnits: Optional[str] = None
    AlternativeID: Optional[str] = None
    StudyDesign: Optional[str] = None
    Link_StudyDesign: Optional[str] = None
    NewGranulomaCount: Optional[str] = None
    nhp_id: Optional[str] = None
    LINK: Optional[str] = None
    START_DATE: Optional[str] = None
    STOP_DATE: Optional[str] = None
    TYPE: Optional[str] = None
    PATIENT_ID: Optional[str] = None
    EVENT_TYPE: Optional[str] = None
    STUDY_DESIGN_NOTES: Optional[str] = None
    DOSE: Optional[str] = None
    TREATMENT_PARENT: Optional[str] = None
    ORGAN_DETAIL: Optional[str] = None
    ORGAN: Optional[str] = None
    TREATMENT: Optional[str] = None
    CFU: Optional[str] = None
    NAME: Optional[str] = None
    DOSE_UNITS: Optional[str] = None
    SAMPLE_ID: Optional[str] = None
    ROUTE: Optional[str] = None
    PARENT: Optional[str] = None
    Treatment3Route: Optional[str] = None
    Treatment3Date: Optional[str] = None
    Treatment3Dose: Optional[str] = None
    Treatment3DoseUnits: Optional[str] = None

class Navigator(BaseModel):
    agent: "Agent"
    next_tool: str
    tool_args: List[str]
    justification: str

class Payload(BaseModel):
    system_message: str
    user_query: str
    aggregatedMessages: Optional[List[str]] = None
    resource: Optional["ResourceBox"] = None

class QueryParser(BaseModel):
    parsed_query: str
    tasks: List[str]
    justification: str

class ResourceBox(BaseModel):
    sample_metadata: Optional[List["Metadata"]] = None
    protocolUrl: Optional[str] = None
    sampleUrl: Optional[str] = None
    UIDs: Optional[List[str]] = None

class Responder(BaseModel):
    Next_worker: "Agent"
    justification: str

class ResponseFormatter(BaseModel):
    formattedResponse: str
    name: str
    messages: "Payload"
    justification: str

class Supervisor(BaseModel):
    Next_worker: "Agent"
    justification: str

class ToolMetadata(BaseModel):
    doc: str
    signature: str

class Validator(BaseModel):
    name: str
    Valid: bool
    Clarifying_Question: Optional[str] = None
    justification: str
    response: "Payload"
