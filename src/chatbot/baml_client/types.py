###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Dict, Generic, List, Literal, Optional, TypeVar, Union, TypeAlias


T = TypeVar('T')
CheckName = TypeVar('CheckName', bound=str)

class Check(BaseModel):
    name: str
    expression: str
    status: str

class Checked(BaseModel, Generic[T,CheckName]):
    value: T
    checks: Dict[CheckName, Check]

def get_checks(checks: Dict[CheckName, Check]) -> List[Check]:
    return list(checks.values())

def all_succeeded(checks: Dict[CheckName, Check]) -> bool:
    return all(check.status == "succeeded" for check in get_checks(checks))



class Agent(BaseModel):
    agent: str
    role: str
    toolbox: Optional[Dict[str, "ToolMetadata"]] = None

class Column(BaseModel):
    name: str
    type: str
    nullable: bool
    default: Optional[str] = None
    json_keys: Optional[List[str]] = None

class DataSummarizer(BaseModel):
    summary: str
    messages: "Payload"
    justification: str

class Metadata(BaseModel):
    AntibodyParent: Optional[str] = None
    BioSampleAccession: Optional[str] = None
    BiosafetyLevel: Optional[str] = None
    Catalog: Optional[str] = None
    CellCount: Optional[str] = None
    CellLine: Optional[str] = None
    CellLineage: Optional[str] = None
    Checksum_PrimaryData: Optional[str] = None
    Checksum_PrimaryType: Optional[str] = None
    CompensationFCSParent: Optional[str] = None
    Concentration: Optional[str] = None
    ConcentrationUnits: Optional[str] = None
    File_PrimaryData: Optional[str] = None
    Fixation: Optional[str] = None
    Fixative: Optional[str] = None
    FlowAmount: Optional[str] = None
    FlowAmountUnits: Optional[str] = None
    FMO: Optional[str] = None
    Genotype: Optional[str] = None
    Instrument: Optional[str] = None
    InstrumentUser: Optional[str] = None
    Link_PrimaryData: Optional[str] = None
    Media: Optional[str] = None
    Name: Optional[str] = None
    Notes: Optional[str] = None
    Parent: Optional[str] = None
    PassageNum: Optional[str] = None
    Path_PrimaryData: Optional[str] = None
    Phenotype: Optional[str] = None
    Protocol: Optional[str] = None
    Protocol_Stimulation: Optional[str] = None
    Protocol_Treatment: Optional[str] = None
    Publish_uri: Optional[str] = None
    QC: Optional[str] = None
    QC_notes: Optional[str] = None
    ReagenCatalogNum: Optional[str] = None
    Reagent: Optional[str] = None
    ReagentBrand: Optional[str] = None
    ReagentManufacturer: Optional[str] = None
    Reference: Optional[str] = None
    Repository: Optional[str] = None
    RepositoryID: Optional[str] = None
    Scientist: Optional[str] = None
    SEEKSubmissionDate: Optional[str] = None
    SampleCreationDate: Optional[str] = None
    Software: Optional[str] = None
    Source: Optional[str] = None
    SourceFacility: Optional[str] = None
    Species: Optional[str] = None
    Stain: Optional[str] = None
    StorageLocation: Optional[str] = None
    StorageSite: Optional[str] = None
    StorageTemperature: Optional[str] = None
    StorageTemperatureUnits: Optional[str] = None
    StorageType: Optional[str] = None
    Stimulation: Optional[str] = None
    Timepoint: Optional[str] = None
    TotalProtein: Optional[str] = None
    TotalProteinUnits: Optional[str] = None
    Treatment1: Optional[str] = None
    Treatment1Dose: Optional[str] = None
    Treatment1DoseUnits: Optional[str] = None
    Treatment1Reference: Optional[str] = None
    Treatment2: Optional[str] = None
    Treatment2Dose: Optional[str] = None
    Treatment2DoseUnits: Optional[str] = None
    Treatment2Reference: Optional[str] = None
    TreatmentDoseTime: Optional[str] = None
    TreatmentRoute: Optional[str] = None
    TreatmentTimeUnits: Optional[str] = None
    TreatmentType: Optional[str] = None
    Type: Optional[str] = None
    UID: Optional[str] = None
    ValidationMethod: Optional[str] = None
    ValidationQuality: Optional[str] = None
    Vendor: Optional[str] = None

class Navigator(BaseModel):
    agent: "Agent"
    next_tool: str
    tool_args: List[str]
    justification: str

class Payload(BaseModel):
    system_message: str
    user_query: str
    aggregatedMessages: Optional[List[str]] = None
    resource: Optional["ResourceBox"] = None

class QueryParser(BaseModel):
    parsed_query: str
    tasks: List[str]
    justification: str

class ResourceBox(BaseModel):
    sample_metadata: Optional[List["Metadata"]] = None
    protocolUrl: Optional[str] = None
    sampleUrl: Optional[str] = None
    UIDs: Optional[List[str]] = None
    db_schema: Optional["Schema"] = None

class Responder(BaseModel):
    Next_worker: "Agent"
    justification: str

class ResponseFormatter(BaseModel):
    formattedResponse: str
    name: str
    messages: "Payload"
    justification: str

class Schema(BaseModel):
    tables: List["Table"]

class SchemaMapper(BaseModel):
    name: str
    schema_map: "Schema"
    pseudo_query: str
    justification: str

class Supervisor(BaseModel):
    Next_worker: "Agent"
    justification: str

class Table(BaseModel):
    name: str
    columns: List["Column"]

class ToolMetadata(BaseModel):
    doc: str
    signature: str

class Validator(BaseModel):
    name: str
    Valid: bool
    Clarifying_Question: Optional[str] = None
    justification: str
    response: "Payload"
